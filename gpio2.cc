#include "xparameters.h"
#include "xil_types.h"
#include "xgpio.h"
#include "xil_io.h"
#include "xil_exception.h"
#include <iostream>
using namespace std;
int main()
{
//declare a pointer to the base address of the GPIO instance
//the value of XPAR_AXI_GPIO_FOR_OUTPUT_BASEADDR
//is defined through a #define directive in the
//xparameters.h file. The value is determined by the
//address generated by XPS when the GPIO was added (0x41200000 )
u32* gpio_ptr = (u32*) XPAR_AXI_GPIO_FOR_OUTPUT_BASEADDR;
// configure the port as output by writing a 0 into the
// port data direction register found at offset 4 bytes from
// the base address ( 4 bytes = 1 u32 offset in pointer arithmetic)
*(gpio_ptr + 1 ) = 0;
int ted_data ; // use int to input data as
// cin does not know how to
// handle u8 datatype
for(int i = 0 ; i < 9 ; i++)
{
cout << "Enter the data to be sent to the GPIO port"<<endl;
cin >> ted_data;
cout << "The data is " << ted_data << endl;
// write the data to the GPIO port (at offset 0)
// cast the data as a u8
*gpio_ptr = (u8) ted_data;
}

cout << "End of program" << endl;
// cleanup_platform();
return 0;
}
